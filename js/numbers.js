var Numbers = function() {
  this.subject = Numbers.PI;
  this.digits = 3;

  var currentMax = {};
  currentMax[Numbers.PI] = 3;
  currentMax[Numbers.PHI] = 3;
  currentMax[Numbers.E] = 3;

  var request = new XMLHttpRequest();

  var fetchDigits = function(url, success, error) {
    request.open('GET', url, true);

    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        success(request.responseText);
      } else {
        console.log("onload:error");
        error()
      }
    };

    request.onerror = function() {
      console.log("onerror:error");
      error();
    };

    request.send();
  }

  this.setDigits = function(n, done) {
    var url;
    var that = this;

    if (n < 3 || n > 6) return;

    this.digits = n;

    if (n > currentMax[this.subject]) {
      url = [
        "data/",
        this.subject,
        "1",
        Array(n + 1).join("0"),
        ".csv"
      ].join("");

      fetchDigits(url, function(value) {
        that[that.subject] = value;
        done();
      }, function() {});

      currentMax[this.subject] = n;
    } else {
      done();
    }
  }

  this.subjectValue = function() {
    return this[this.subject].substring(0, Math.pow(10, this.digits));
  }

  this.setSubject = function(s, done) {
    this.subject = s;
    this.setDigits(this.digits, done);
  }
}

Numbers.PI = "pi";
Numbers.PHI = "phi";
Numbers.E = "e";

Numbers.prototype[Numbers.PI] = "31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989";

Numbers.prototype[Numbers.PHI] = "1618033988749894848204586834365638117720309179805762862135448622705260462818902449707207204189391137484754088075386891752126633862223536931793180060766726354433389086595939582905638322661319928290267880675208766892501711696207032221043216269548626296313614438149758701220340805887954454749246185695364864449241044320771344947049565846788509874339442212544877066478091588460749988712400765217057517978834166256249407589069704000281210427621771117778053153171410117046665991466979873176135600670874807101317952368942752194843530567830022878569978297783478458782289110976250030269615617002504643382437764861028383126833037242926752631165339247316711121158818638513316203840052221657912866752946549068113171599343235973494985090409476213222981017261070596116456299098162905552085247903524060201727997471753427775927786256194320827505131218156285512224809394712341451702237358057727861600868838295230459264787801788992199027077690389532196819861514378031499741106926088674296226757560523172777520353613936";

Numbers.prototype[Numbers.E] = "2718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466391932003059921817413596629043572900334295260595630738132328627943490763233829880753195251019011573834187930702154089149934884167509244761460668082264800168477411853742345442437107539077744992069551702761838606261331384583000752044933826560297606737113200709328709127443747047230696977209310141692836819025515108657463772111252389784425056953696770785449969967946864454905987931636889230098793127736178215424999229576351482208269895193668033182528869398496465105820939239829488793320362509443117301238197068416140397019837679320683282376464804295311802328782509819455815301756717361332069811250996181881593041690351598888519345807273866738589422879228499892086805825749279610484198444363463244968487560233624827041978623209002160990235304369941849146314093431738143640546253152096183690888707016768396424378140592714563549061303107208510383750510115747704171898610687396965521267154688957035035";

module.exports = Numbers;
